# -*- readme-debian -*-


Bugs fixed in 0.7.0:
====================

[lifefem]
* Fixed a really nasty bug in elemOper.cpp::div elementary operator (DADP)

New in 0.7.0:
=============

[all]
* Renamed LifeV.hpp to life.hpp (CP)
* Fixed tons of GCC (3.3) warnings (CP)
  ** Commented out unused variables
  ** Removed always-true conditions

[configure]
* Added more warnings from the compiler (CP)
* Added boost::regex check (CP)
* Updated doxygen config file (CP)

[lifecore]
* Pave to way to lifev-apps and lifev-playground  (CP)
  ** Renamed lifeV.hpp to life.hpp and split it
  ** lifeversion.hpp to handle macros and functions to interrogate
     life version
  ** lifemacros.hpp for assertions macros 
* Added SmartAssert class and LIFEV_ASSERT macro (CP)

[lifefem]
* Added levelset solver (DADP)
* Added hyperbolic solver (DADP)
* Added operators for two-fluid flows (DADP)

[testsuite]
* Added levelset tests (DADP)


New in 0.6.0:
=============
[configure]
* Cleanup, homogenized and centralized lookup directories 
  for 3rd party libraries (CP,CW)
* Added support for AMD ACML and Intel MKL for both 32bits 
  and 64bits arch(CP)

* [lifefem]
* Added curl-curl operator (CV)

[lifesolver]
* Added ParabolicSolver, TimeSolver, *UDep (MM)
* Added preconditoned Domain Decomposition Newton algorithm (SP GF)
* Class operFS renamed to FSIOperator (GF)
* Added class reducedLinFluid that computes the reduced fluid for the jacobian
  in steklovPoincare and exactJacobian framework (GF)
* Added possibility to use curl-curl formulation (CV)

[testsuite]
* Added test for ParabolicSolver in lifesolver (MM)
* Added quasi Newton testsuite (MF)


Bugs fixed in 0.5.0:
====================
[configure]
* Fixed umfpack check when umfpack is not installed (CP)

[lifecore]
* Cleaned lifecore: nothing belongs to lifecore that should
  belong elsewhere (CP)

[lifefem]
* Fixed little bugs in basisElSh,currentFE,defQuadRuleFE (MM)
* Fixed bug in dofInterface3Dto3D constructor: reference to
  temporary object (CP)

[lifesolver]
* Bug #33: random crash in convDiffReactSolverPC::getcoord (MM)
* Sanitized the FSI related classes especially wrt BC (CP)

[testsuite]
* Fixed inhomogeneous Neumann conditions test. The test was supposed
to test these BCs but it was only testing Dirichlet BCs (CW)

New in 0.5.0:
=============
[configure]
* Added support for boost which is mandatory now (CP)

[all]
* Moved files to their proper library (CP)
* Ported LifeV to ublas::vector<Real>, got rid of the old vector classes (CP)

[lifecore]
* Added the Cloning Factory pattern (aka Abstract Factory)
  implementation (CP)

[lifefem]
* Added discontinuous finite element(discontinuous galerkin) (DADP)
* Sanitized/revamped the boundary conditions classes (CP)
  ** split BC classes into their own files
  ** improved documentation
  ** reduced code redundancy and code size
  ** use clone factory for BCFunction
  ** use clone factory for BCVector
  ** use boost::shared_ptr<> for safe memory management

[lifesolver]
* Templated the darcy classes.(VM)
  ** use of DataMesh class requires a change in data files
* Abstraction and interface for darcy Solver (CP, VM)
* Factorized and merged FSI::operFS and subclasses (GF)
* Added NavierStokesWithFlux solver to impose fluxes (CV, CP)
* Added FSISolver class (CP)

[lifefilters]
* Added netgen reader/writer(solution) (MM) 
* Added gmsh reader (CP) 
* Added frontend for mesh readers (CP) 

[testsuite]
* Added test for 3D/0D coupling (AM)
* Moved files of test_darcy in lifesolver (VM, CP)
  ** hex and tet tests
  ** tensor and scalar diffusion tests
* Removed test_darcytetra (VM)
* oned solver can solve 2 coupled tubes (VM)
* Centralized all FSI tests in test_fsi (GF)
* Added test for netgen in lifefilters (MM) 


Bugs fixed in 0.4.0:
====================
[all]
* Banished using directives from _all_ header files (CW, CP, VM)
* More C++ standard compliance (CP)
* Better g++-3.4 support however still insufficient (CP)

[configure]
* Fixed umfpack check and readded it to configure (CP)

[lifecore]
* Renamed LDebug to Debug for area debugging (CP)

[lifefilters]
* OpenDX filter got revamped (CW)

[testsuite]
* remove/centralize multiple copies of classes/files (CP)

New in 0.4.0:
=============
[configure]
* Added --with-petsc=<top level petsc directory> configure option (CP)
* Added support for automake 1.9 (CP)
* Added check for the boost libraries and their installation sanity (CP)

[lifecore]
* Added an implementation of the Singleton design pattern (CP)
* Added an implementation of the Factory design pattern (CP)
* Added policies for creation and lifetime of objects (CP)

[lifearray]
* Added helpers for the Fitzhugh-Nagumo solver (JFG)

[lifealg]
* Added support for petsc 2.2.0/2.2.1 (CW & CP)
* Added SolverAztec similar to SolverPETSC (CW)
* Added Aitken method to get optimal relaxation parameter (GF & SD)
* Added nonlinear Richardson solver (GF & SD)

[lifefem]
* Added helpers for the Fitzhugh-Nagumo solver (JFG)

[lifesolver]
* Got rid of NavierStokesHandler_miguel.hpp (CW)

[lifefilters]
* Added Ensight7 writer (99% MP & 1% CP)

[testsuite]
* Added test case for coupled mass transport solvers (MP)
* Added NS test case for boundary condition given as a vector (AM)
* Added test for singleton pattern : lifecore/test_singleton (CP)
* Added test for factory pattern : lifecore/test_factory (CP)


Bugs fixed in 0.3.0:
====================
* Fixed (hopefully) mpi autoconf check (CP)
* Fixed petsc support, require petsc2.2 now (CP)
* Fixed testsuite/test_linearsolvers (CP)

New in 0.3.0:
=============
* Added more tests in testsuite/lifealg for linearsolvers (CP)
* Replaced values.{h,c}pp with sparseArray.{h,c}pp (LF & CP)
* Added 1D model solver for blood flow simulation (VM)
* Added vector norms in lifealg/vectorNorms.{h,c}pp (CP)
* Added reaction term in masstransport (MP)
* Embedded library and testsuite code into the LifeV namespace (CP)
* Ported all tests to GetPot (CP)
* Ported all tests to this framework (CP)
  41 running tests are available
  3 nonautomatic (disabled) tests (test_fsi_*, test_ns_sstress)
* New unit testing framework : we use AutoTest(from autoconf) (CP)



Bugs fixed in 0.2.0-pre1:
=========================
* Bug #23: "fixed wrong assembly in elemOper.cpp in stiff_sd" (MP)
* Bug #27: "No rule to make target `admin/acinclude.m4.in'" (CP)
* Bug #19: "Missing mesh (carotid.m++) in test_ns_sstress" (AV)

Tasks completed in 0.2.0-pre1:
==============================
* Task #104: "Generate new directory layout" (CP)
* Task #105: "move files into proper new directories" (CP & LF)
* Task #109: "Convection Reaction Diffusion solver implementation" (MP)

New in 0.2.0-pre1:
==================
* Added area debugging see LDebug class (CP)
* Added a petsc interface in lifealfg, see SolverPETSC class (CP)
* Changed interface to vecUnknown classes: no need to use .vec() anymore
  fixed speed issues at the same time (CP)
* Updated libtool scripts (CP)
* Added configure check for parmetis (at least 3.1) (CP)
* Added configure check for petsc (at least 2.1.6) (CP)
* Added configure check for umfpack (at least 4.3) (CP)
* Added configure check for mpi (CP)
* Updated api documentation generation(CP)


Bugs fixed in 0.1.0pre5:
========================
* Bug #2 : documentation update to lifev-dev manual
* Bug #17: fixed segfault in medium size NavierStokes problem
* Bug #20: fixed data files in testsuite to reflect the tests location

New in 0.1.0pre5:
=================
* added --enable-debug and --enable-opt to configure script
* LifeV is finally copyrighted properly
* LifeV libraries are now LGPL. Header and implementation have 
  been updated accordingly.
* LifeV testsuite is now GPL. Header and implementation have 
  been updated accordingly.


Bugs fixed in 0.1.0pre4:
========================
* Bug #8 : wrong (?) assert in regionMesh3D.hpp
* Bug #9 : updateElementFaces(true) requires updateElementEdges() first.
* Bug #15: data directory in testsuite

New in 0.1.0pre4:
=================
* 'make distcheck' works from start to finish properly
* lifev compiles entirely included all testsuite tests
* removed entirely testsuite/development: either created a proper 
  testsuite/test_{} test or moved the test to the lifev-sandbox
* added lifecore/testsuite for small tests programs related to lifecore
* life libraries should be std:: clean. no more using namespace std::
  it is a very bad programming pratice in the long run
* use Quality Management Test tool qmtest for the testsuite
* moved testsuite/official/* and testsuite/development/* in testsuite


New in 0.1.0pre3:
=================
* new architecture using the autotools from the GNU
* new standard directory layout
* fixed some bugs and miscompilation in a few places


 -- Christophe Prud'homme <prudhomm@debian.org>, Sat Feb 19 22:36:10 2005
