./Makefile.headers:LIFEALG_HDRS=life/lifealg/NonLinearAitken.hpp life/lifealg/PreconditionerIfpack.hpp life/lifealg/LinearEpetraOperator.hpp life/lifealg/PreconditionerML.hpp life/lifealg/SolverAmesos.hpp life/lifealg/NonLinearBrent.hpp life/lifealg/SolverAztecOO.hpp life/lifealg/PreconditionerAztecOO.hpp life/lifealg/Preconditioner.hpp life/lifealg/LinearEpetraOperatorBlock.hpp life/lifealg/NonLinearLineSearch.hpp life/lifealg/NonLinearRichardson.hpp

./life/lifealg/PreconditionerIfpack.hpp://! PreconditionerIfpack - Class implementing overlapping Schwarz preconditioner
./life/lifealg/PreconditionerIfpack.hpp:class PreconditionerIfpack:
./life/lifealg/PreconditionerIfpack.hpp:    PreconditionerIfpack();
./life/lifealg/PreconditionerIfpack.hpp:    ~PreconditionerIfpack();
./life/lifealg/PreconditionerIfpack.hpp:inline Preconditioner* createIfpack() { return new PreconditionerIfpack(); }
./life/lifealg/PreconditionerML.cpp:    PreconditionerIfpack::createIfpackList( SmootherIFSubList, dataFile, section, "ML" );
./life/lifealg/PreconditionerML.hpp:#include <life/lifealg/PreconditionerIfpack.hpp>
./life/lifealg/SolverAztecOO.hpp:#include <life/lifealg/PreconditionerIfpack.hpp>

./life/lifealg/Makefile.am:liblifealg_la_SOURCES	= LinearEpetraOperatorBlock.cpp PreconditionerAztecOO.cpp Preconditioner.cpp PreconditionerML.cpp PreconditionerIfpack.cpp SolverAmesos.cpp SolverAztecOO.cpp

./life/lifealg/Makefile.in:	PreconditionerIfpack.lo SolverAmesos.lo SolverAztecOO.lo
./life/lifealg/Makefile.in:liblifealg_la_SOURCES = LinearEpetraOperatorBlock.cpp PreconditionerAztecOO.cpp Preconditioner.cpp PreconditionerML.cpp PreconditionerIfpack.cpp SolverAmesos.cpp SolverAztecOO.cpp
./life/lifealg/Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PreconditionerIfpack.Plo@am__quote@

./life/lifealg/PreconditionerIfpack.cpp:#include "PreconditionerIfpack.hpp"
./life/lifealg/PreconditionerIfpack.cpp:PreconditionerIfpack::PreconditionerIfpack():
./life/lifealg/PreconditionerIfpack.cpp:PreconditionerIfpack::~PreconditionerIfpack()
./life/lifealg/PreconditionerIfpack.cpp:PreconditionerIfpack::buildPreconditioner( operator_type& matrix )
./life/lifealg/PreconditionerIfpack.cpp:PreconditionerIfpack::resetPreconditioner()
./life/lifealg/PreconditionerIfpack.cpp:PreconditionerIfpack::createParametersList( list_Type&         list,
./life/lifealg/PreconditionerIfpack.cpp:PreconditionerIfpack::createIfpackList( list_Type&         list,
./life/lifealg/PreconditionerIfpack.cpp:PreconditionerIfpack::ApplyInverse( const Epetra_MultiVector& vector1, Epetra_MultiVector& vector2 ) const
./life/lifealg/PreconditionerIfpack.cpp:PreconditionerIfpack::Apply( const Epetra_MultiVector& vector1, Epetra_MultiVector& vector2 ) const
./life/lifealg/PreconditionerIfpack.cpp:PreconditionerIfpack::showMe( std::ostream& output ) const
./life/lifealg/PreconditionerIfpack.cpp:    output << "showMe must be implemented for the PreconditionerIfpack class" << std::endl;
./life/lifealg/PreconditionerIfpack.cpp:PreconditionerIfpack::setDataFromGetPot( const GetPot&      dataFile,
./life/lifealg/PreconditionerIfpack.cpp:PreconditionerIfpack::SetUseTranspose( bool useTranspose )
./life/lifealg/PreconditionerIfpack.cpp:PreconditionerIfpack::isPreconditionerSet() const
./life/lifealg/PreconditionerIfpack.cpp:PreconditionerIfpack::condest()
./life/lifealg/PreconditionerIfpack.cpp:PreconditionerIfpack::preconditioner()
./life/lifealg/PreconditionerIfpack.cpp:PreconditionerIfpack::super::prec_type
./life/lifealg/PreconditionerIfpack.cpp:PreconditionerIfpack::preconditionerPtr()
./life/lifealg/PreconditionerIfpack.cpp:PreconditionerIfpack::preconditionerType()
./life/lifealg/PreconditionerIfpack.cpp:PreconditionerIfpack::getOverlapLevel() const
./life/lifealg/PreconditionerIfpack.cpp:PreconditionerIfpack::UseTranspose()
./life/lifealg/PreconditionerIfpack.cpp:PreconditionerIfpack::OperatorRangeMap() const
./life/lifealg/PreconditionerIfpack.cpp:PreconditionerIfpack::OperatorDomainMap() const

./life/lifesolver/OseenSolver.hpp:#include <life/lifealg/PreconditionerIfpack.hpp>

./Makefile.in:LIFEALG_HDRS = life/lifealg/NonLinearAitken.hpp life/lifealg/PreconditionerIfpack.hpp life/lifealg/LinearEpetraOperator.hpp life/lifealg/PreconditionerML.hpp life/lifealg/SolverAmesos.hpp life/lifealg/NonLinearBrent.hpp life/lifealg/SolverAztecOO.hpp life/lifealg/PreconditionerAztecOO.hpp life/lifealg/Preconditioner.hpp life/lifealg/LinearEpetraOperatorBlock.hpp life/lifealg/NonLinearLineSearch.hpp life/lifealg/NonLinearRichardson.hpp
