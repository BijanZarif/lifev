# -*- mode: m4 -*-
#
#  This file is part of the LifeV library
#
#  Author(s): Christophe Prud'homme <christophe.prudhomme@epfl.ch>
#             Gwenol Grandperrin <gwenol.grandperrin@epfl.ch>
#       Date: 2010-05-17
#
#  Copyright (C) 2004 EPFL, INRIA and Politecnico di Milano
#
#  This library is free software; you can redistribute it and/or
#  modify it under the terms of the GNU Lesser General Public
#  License as published by the Free Software Foundation; either
#  version 2.1 of the License, or (at your option) any later version.
#
#  This library is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#  Lesser General Public License for more details.
#
#  You should have received a copy of the GNU Lesser General Public
#  License along with this library; if not, write to the Free Software
#  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
# \file testsuite.at
# \author Samuel Quinodoz <samuel.quinodoz@epfl.ch>
# \date 2010-11-19
#
AT_SETUP([test_LevelSetSolver])
AT_KEYWORDS([Level Set test Solver])
AT_DATA([data],[[

# -*- getpot -*- (GetPot mode activation for emacs)
#-------------------------------------------------
#      Data file for LevelSetSolver test case
#-------------------------------------------------

[mesh]

nelements = 19

[../exporter]

type       = hdf5 # hdf5 (if library compiled with hdf5 support) or ensight
multimesh  = false
start      = 0
save       = 1

[../prec]
	prectype                = Ifpack # Ifpack or ML
	displayList             = false

        [../ifpack]
	        overlap		= 2

           	[./fact]
           	ilut_level-of-fill            = 1
           	drop_tolerance                = 1.e-5
           	relax_value                   = 0

           	[../amesos]
           	solvertype =  Amesos_Umfpack # Amesos_KLU or Amesos_Umfpack

           	[../partitioner]
           	overlap = 2

           	[../schwarz]
           	reordering_type = none #metis, rcm, none
           	filter_singletons = true

		[../]
	[../]

[../solver]
    solver          = gmres
    scaling         = none
    output          = all # none
    conv            = rhs
    max_iter        = 200
    reuse           = false
    max_iter_reuse  = 80
    kspace          = 100
    tol             = 1.e-10    # AztecOO tolerance

[../level-set]
	
	[./time_discretization]
      		initialtime             = 0.
		endtime                 = 0.1
		timestep        	= 0.05
		BDF_order               = 1

	[../]

      	stabilization = ip  #options: none, ip
      
      	[./ip]

		coefficient = 0.5
		treatment = semi-implicit  #options: implicit, semi-implicit, explicit

	[../]

[../]


]])
AT_CHECK([ mpirun -np 3 ../../test_LevelSetSolver/test_LevelSetSolver -c],[0],[ignore],[ignore])
AT_CLEANUP([])

