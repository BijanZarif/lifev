###################################################################################################
#
#                       This file is part of the LifeV Library
#                Copyright (C) 2004, 2005, 2007 EPFL, Politecnico di Milano, INRIA
#                Copyright (C) 2010 EPFL, Politecnico di Milano, Emory University
#
#      Author(s): Paolo Crosetto <paolo.crosetto@epfl.ch>
#                 Jean Bonnemain <jean.bonnemain@epfl.ch>
#                 Cristiano Malossi <cristiano.malossi@epfl.ch>
#           Date: 2011-04-14
#  License Terms: GNU LGPL
#
###################################################################################################
### MODEL: FSI3D - Iliac ##########################################################################
###################################################################################################

[Multiscale]
modelName        = FSI3D_Iliac_NOBL_Medium_MonolithicGE
modelType        = FSI3D
couplingFlags    = '2 4 3 5 6'

#Note on the flags:
# 2: Abdominal Aorta E,        Area = 1.528053101775165e+00 - (RS_041: 0.9160884178 0.8494866535)
# 4: Inner Iliac (left),       Area = 1.608700348268665e-01 - (RS_045: 0.125663706143592)
# 3: External Iliac (left),    Area = 1.991225727820763e-01 - (RS_044: 0.3216990877 0.2922466566)
# 5: Inner Iliac (right),      Area = 1.686868541692753e-01 - (RS_051: 0.125663706143592)
# 6: External Iliac (right),   Area = 2.210729557211047e-01 - (RS_050: 0.3216990877 0.2922466566)

### Iliac dimensions (measures taken from the centerline):
# Abdominal Aorta E lenght        = 3.57 cm (1D lenght: 2.0 cm)
# Inner Iliac (left) lenght       = 3.15 cm (1D length: 5.0 cm)
# External Iliac (left) lenght    = 5.70 cm (1D length: 14.4 cm)
# Inner Iliac (right) lenght      = 3.00 cm (1D length: 5.0 cm)
# External Iliac (right) lenght   = 5.57 cm (1D length: 14.4 cm)



[exporter]
start            = 0             # start index for filenames
save             = 1             # how many time steps per posptrocessing
multimesh        = false         # true if the mesh has to be saved at each post-processing step
type             = hdf5

[importer]
type             = hdf5



[problem]
method      = monolithicGE # monolithicGE, monolithicGI

blockOper   = AdditiveSchwarz # AdditiveSchwarz   AdditiveSchwarzRN
                                AdditiveSchwarzGI AdditiveSchwarzRNGI

DDBlockPrec = ComposedDN # OPTIONS:
                         #AdditiveSchwarz: monolithic A-S preconditioner,
                         #AdditiveSchwarzGI: monolithic A-S preconditioner,
                         #ComposedDN: modular Dirichlet-Neumann preconditioner
                         #ComposedDN2: modular Dirichlet-Neumann preconditioner
                         #ComposedNN: modular Neumann-Neumann + Dirichlet-Dirichlet preconditioner
                         #ComposedDNND: modular Dirichlet-Neumann + Neumann-Dirichlet preconditioner
                         #ComposedDNGI: modular preconditioner for the geometric implicit, split in 3 factors
                         #ComposedDN2GI: modular preconditioner for the geometric implicit, split in 3 factors
                         #ComposedDNDGI: under testing, do not use
                         #ComposedDND2DGI: under testing, do not use


reducedFluid = 0    # 0 = exact, 1 = inexact
defOmega     = 0.01 # usually 0.01 for precond = 0 or 1; -1 for precond = 2
defOmegaS    = 0.01 # matters only with  precond = 2
defOmegaF    = 0.01 # matters only with  precond = 2

linesearch   = 0
updateEvery  = 1
# NonLinearRichardson: stop_tol  = abstol + reltol*normRes;
abstol       =  0.    # tolerance in nonLinearRichardson
reltol       =  1.e-7 # tolerance in nonLinearRichardson
restart      = 0
maxSubIter   = 50
fluidMeshPartitioned = none
solidMeshPartitioned = none



[fluid]
useShapeDerivatives = false
domainVelImplicit   = false  # tells if the domain vel is to be considered implicitly in the convective term
convectiveTermDer   = false  # tells if the velocity is to be considered implicitly in the convective term
semiImplicit        = true   # tells if we advance in time after the first nonlinear iteration or not

    [./physics] # Defined here only if different from the one in the main file.
    #density         = 1.0             # density   [g/cm^3]
    #viscosity       = 0.035           # viscosity [g/cm/s]

    [../time_discretization]
    #timestep        = 0.0001          # [s] Defined here only if different from the one in the main file.
    BDF_order       = 1

    [../space_discretization]
    mesh_dir        = ./Mesh/
    mesh_file       = Iliac_noBL_mid_fluid.mesh
    mesh_type       = .mesh
    verbose         = 0                # verbose during mesh-reading

    vel_order       = P1               # P1, P1Bubble, P2
    #vel_order       = P1Bubble         # P1, P1Bubble, P2
    #vel_order       = P2               # P1, P1Bubble, P2
    press_order     = P1               # P1, P2
    stiff_strain    = false            # true: sigma with grad( u )^T, false: sigma without it
    div_beta_u_v    = false            # 1=on, 0=off
    diagonalize     = 0                # weight, 0=off
    stabilization   = 'ip'             # "none": none, "ip": Interior Penalty, "sd":Stream-line diffusion

    [../miscellaneous]
    verbose   = 0
    velname   = vel
    steady    = 0
    factor    = 1

    [../ipstab]
    gammaBeta       = 1
    gammaDiv        = 0.2
    gammaPress      = 0.05
    max_iter_reuse  = 100
    reuse           = true

    #[../valuespersection]
    #computeMeanValuesPerSection    = 0
    #nb_z_section                   = 2
    #tol_section                    = 2e-2
    #x_section_frontier             = .0
    #z_section_init                 = -1.0
    #z_section_final                = .0
    #nb_polygon_edges               = 10

    [../boundary_conditions]
    list = ' '

    [../]



[interface] # mesh dependent flags for the interface.
fluid_flag      =  100   # default: 1
tolerance       =  0   # how far points are to be considered the same on the interface

[solid]

    [./physics]
    solidType = linearVenantKirchhof # linearVenantKirchhof
                                     # nonLinearVenantKirchhof
    # Material list: Common; Common Left; Common Right; External Left; Internal Left; Internal Right; External Right
    material_flag    = '1001 1002 1003 1004 1005 1006 1007'
    #externalPressure = 0
    #density          = 1.2
    young            = '3.0784E6 3.0784E6 3.0784E6 3.0784E6 12.3136E6 12.3136E6 3.0784E6'
    poisson          = '0.48 0.48 0.48 0.48 0.48 0.48 0.48'

    [../time_discretization]
    #timestep                   = 0.0001 # [s]
    BDF_order       = 1

    [../space_discretization]
    mesh_dir         = ./Mesh/
    mesh_file        = Iliac_noBL_mid_solid.mesh  # mesh file
    order            = P1

    [../miscellaneous]
    factor     = 12
    verbose    = 1
    depname    = dep

    [../newton]
    maxiter    = 1
    abstol     = 1.e-8
    linesearch = 0

    [../boundary_conditions]
    #list = ' '                                                                          # Free dispacement
    list = 'CommonIliac_Clumped
            ExternalIliacLeft_Clumped            ExternalIliacRight_Clumped
            InternalIliacLeft_Clumped            InternalIliacRight_Clumped
            CommonIliac_RobinPhysiological
            CommonIliacLeft_RobinPhysiological   CommonIliacRight_RobinPhysiological
            ExternalIliacLeft_RobinPhysiological ExternalIliacRight_RobinPhysiological
            InternalIliacLeft_RobinPhysiological InternalIliacRight_RobinPhysiological'              # Fixed dispacement + Robin on the external Wall

        [./CommonIliac_Clumped]
        type       = Essential
        flag       = 2
        mode       = Full
        component  = 3
        function   = 0

        [../ExternalIliacLeft_Clumped]
        type       = Essential
        flag       = 3
        mode       = Full
        component  = 3
        function   = 0

        [../ExternalIliacRight_Clumped]
        type       = Essential
        flag       = 6
        mode       = Full
        component  = 3
        function   = 0

        [../InternalIliacLeft_Clumped]
        type       = Essential
        flag       = 4
        mode       = Full
        component  = 3
        function   = 0

        [../InternalIliacRight_Clumped]
        type       = Essential
        flag       = 5
        mode       = Full
        component  = 3
        function   = 0

        [../CommonIliac_RobinPhysiological]
        type       = Robin
        flag       = 1001
        mode       = Full
        component  = 3
        functionSD = RobinWall

            [./RobinAlpha]
            #function = 0
            #function = '3.0 * 10000' # R0 - Paolo
            #function = '5.5 * 10000' # R1
            function = '11.0 * 10000' # R2
            #function = '22.0 * 10000' # R3

            [../RobinBeta]
            function = 0

            [../]

        [../CommonIliacLeft_RobinPhysiological]
        type       = Robin
        flag       = 1002
        mode       = Full
        component  = 3
        functionSD = RobinWall

            [./RobinAlpha]
            #function = 0
            #function = '5.0 * 10000' # R0 - Paolo
            #function = '8.5 * 10000' # R1
            function = '16.0 * 10000' # R2
            #function = '32.0 * 10000' # R3

            [../RobinBeta]
            function = 0

            [../]

        [../CommonIliacRight_RobinPhysiological]
        type       = Robin
        flag       = 1003
        mode       = Full
        component  = 3
        functionSD = RobinWall

            [./RobinAlpha]
            #function = 0
            #function = '5.0 * 10000' # R0 - Paolo
            #function = '8.5 * 10000' # R1
            function = '16.0 * 10000' # R2
            #function = '32.0 * 10000' # R3

            [../RobinBeta]
            function = 0

            [../]

        [../ExternalIliacLeft_RobinPhysiological]
        type       = Robin
        flag       = 1004
        mode       = Full
        component  = 3
        functionSD = RobinWall

            [./RobinAlpha]
            #function = 0
            #function = '6.0 * 10000' # R0 - Paolo
            #function = '10.5 * 10000' # R1
            function = '20.0 * 10000' # R2
            #function = '40.0 * 10000' # R3

            [../RobinBeta]
            function = 0

            [../]

        [../ExternalIliacRight_RobinPhysiological]
        type       = Robin
        flag       = 1007
        mode       = Full
        component  = 3
        functionSD = RobinWall

            [./RobinAlpha]
            #function = 0
            #function = '6.0 * 10000' # R0 - Paolo
            #function = '10.5 * 10000' # R1
            function = '20.0 * 10000' # R2
            #function = '40.0 * 10000' # R3

            [../RobinBeta]
            function = 0

            [../]

        [../InternalIliacLeft_RobinPhysiological]
        type       = Robin
        flag       = 1005
        mode       = Full
        component  = 3
        functionSD = RobinWall

            [./RobinAlpha]
            #function = 0
            #function = '6.0 * 10000' # R0 - Paolo
            #function = '10.5 * 10000' # R1
            function = '20.0 * 10000' # R2
            #function = '40.0 * 10000' # R3

            [../RobinBeta]
            function = 0

            [../]

        [../InternalIliacRight_RobinPhysiological]
        type       = Robin
        flag       = 1006
        mode       = Full
        component  = 3
        functionSD = RobinWall

            [./RobinAlpha]
            #function = 0
            #function = '6.0 * 10000' # R0 - Paolo
            #function = '10.5 * 10000' # R1
            function = '20.0 * 10000' # R2
            #function = '40.0 * 10000' # R3

            [../RobinBeta]
            function = 0

            [../]

        [../]

    [../]



[mesh_motion]

    [./solver]                        # Solver Parameters
    solver          = gmres
    scaling         = none
    output          = none # all none
    conv            = rhs
    max_iter        = 500
    reuse           = true
    max_iter_reuse  = 500
    kspace          = 500
    tol             = 1.e-9

    [../prec]
    #prectype                = AztecOO
    prectype                = Ifpack
    displayList             = false

        [./AztecOO]
        precond             = 'dom_decomp'
        prec_calc           = calc
        reorder             = 1
        keep_info           = 1
        overlap             = 1
        subdomain_solve     = ILUT
        ilut_fill           = 4
        drop                = 1.e-5

        [../ifpack]
        overlap             = 2
        prectype            = Amesos # Amesos (does a local LU factorization), ILUT (not ILU)

            [./relaxation]
            type                   = Jacobi
            sweeps                 = 1
            damping_factor         = 1.
            min_diagonal_value     = 0
            zero_starting_solution = true

            [../partitioner]
            type                   = metis
            overlap                = 2
            local_parts            = 1
            root_node              = 0
            use_symmetric_graph    = true

            [../amesos]
            solvertype             = Amesos_Umfpack # Amesos_KLU or Amesos_Umfpack

            [../fact]
            level-of-fill          = 10
            ilut_level-of-fill     = 4
            absolute_threshold     = 0
            relative_threshold     = 1
            relax_value            = 0
            drop_tolerance         = 1.e-10

            [../schwarz]
            combine_mode           = 0             # 0=Add, 1=Zero, 2=Insert, 3=Average, 4=AbsMax
            compute_condest        = true
            reordering_type        = none          #none, metis, rcm
            filter_singletons      = true

            [../]

        [../]

    [../boundary_conditions]
    list = 'Interface'                                              # Free dispacement

        [./Interface]
        type       = Essential
        flag       = 100
        mode       = Full
        component  = 3
        functionSD = StructureDispToHarmonicExtension

        [../]

    [../]



[linear_system]

    [./solver]                        # Solver Parameters
    solver          = gmres
    scaling         = none
    output          = none # all none
    conv            = rhs
    max_iter        = 500
    reuse           = true
    max_iter_reuse  = 500
    kspace          = 500
    tol             = 1.e-9

    [../prec]
    #prectype                = AztecOO
    prectype                = Composed
    displayList             = false

        [./robin]
        alphaf = 0.
        alphas = 0.5 # parameters for Robin-Robin DDBlock preconditioner

        [../Composed]
        list                = 'Ifpack Ifpack'
        sections            = 'ifpack ifpack'

        [../AztecOO]
        precond             = 'dom_decomp'
        prec_calc           = calc
        reorder             = 1
        keep_info           = 1
        overlap             = 1
        subdomain_solve     = ILUT
        ilut_fill           = 4
        drop                = 1.e-5

        [../ifpack]
        overlap             = 2
        prectype            = Amesos # Amesos (does a local LU factorization), ILUT (not ILU)

            [./relaxation]
            type                   = Jacobi
            sweeps                 = 1
            damping_factor         = 1.
            min_diagonal_value     = 0
            zero_starting_solution = true

            [../partitioner]
            type                   = metis
            overlap                = 2
            local_parts            = 1
            root_node              = 0
            use_symmetric_graph    = true

            [../amesos]
            solvertype             = Amesos_Umfpack # Amesos_KLU or Amesos_Umfpack

            [../fact]
            level-of-fill          = 4
            ilut_level-of-fill     = 10
            absolute_threshold     = 0
            relative_threshold     = 1
            relax_value            = 0
            drop_tolerance         = 1.e-10

            [../schwarz]
            combine_mode           = 0             # 0=Add, 1=Zero, 2=Insert, 3=Average, 4=AbsMax
            compute_condest        = true
            reordering_type        = none          #none, metis, rcm
            filter_singletons      = true

            [../]

        [../ML]
            default_parameter_list = DD    # for ML precond, SA, DD, DD-ML, maxwell, NSSA, DD-ML-LU, DD-LU
            prec_type              = two-level-additive
            displayList            = false

            [./smoother]
                type               = IFPACK
            [../]

        [../]

    [../]



[eigensolver]
nevec        = 10
block_size   = 1;
max_blocks   = 1000;
max_restarts = 1000;
tol          = 1e-5;
which        = ML
neval        = 5
