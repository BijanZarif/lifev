###################################################################################################
#
#                       This file is part of the LifeV Library
#                Copyright (C) 2004, 2005, 2007 EPFL, Politecnico di Milano, INRIA
#                Copyright (C) 2010 EPFL, Politecnico di Milano, Emory University
#
#      Author(s): Cristiano Malossi <cristiano.malossi@epfl.ch>
#           Date: 2011-06-02
#  License Terms: GNU LGPL
#
###################################################################################################
### MODEL: Fluid3D - Iliac ########################################################################
###################################################################################################

[Multiscale]
modelName        = Fluid3D_Iliac_Coarse
modelType        = Fluid3D
couplingFlags    = '2 3 4 5 6'

#Note on the flags:
# 2: Abdominal Aorta E,        Area = 1.528053101775165e+00 - (RS_041: 0.9160884178 0.8494866535)
# 3: Inner Iliac (left),       Area = 1.608700348268665e-01 - (RS_045: 0.125663706143592)
# 4: External Iliac (left),    Area = 1.991225727820763e-01 - (RS_044: 0.3216990877 0.2922466566)
# 5: Inner Iliac (right),      Area = 1.686868541692753e-01 - (RS_051: 0.125663706143592)
# 6: External Iliac (right),   Area = 2.210729557211047e-01 - (RS_050: 0.3216990877 0.2922466566)

### Iliac dimensions (measures taken from the centerline):
# Abdominal Aorta E lenght        = 3.57 cm (1D lenght: 2.0 cm)
# Inner Iliac (left) lenght       = 3.15 cm (1D length: 5.0 cm)
# External Iliac (left) lenght    = 5.70 cm (1D length: 14.4 cm)
# Inner Iliac (right) lenght      = 3.00 cm (1D length: 5.0 cm)
# External Iliac (right) lenght   = 5.57 cm (1D length: 14.4 cm)



[exporter]
start            = 0             # start index for filenames
save             = 1             # how many time steps per posptrocessing
multimesh        = false         # true if the mesh has to be saved at each post-processing step
type             = hdf5

[importer]
type             = hdf5


[fluid]
useShapeDerivatives = false
diagonalBlockPrec   = false

    [./physics] # Defined here only if different from the one in the main file.
    #density         = 1.0             # density   [g/cm^3]
    #viscosity       = 0.035           # viscosity [g/cm/s]

    [../time_discretization]
    #timestep        = 0.0001          # [s] Defined here only if different from the one in the main file.
    BDF_order       = 1

    [../space_discretization]
    mesh_dir        = ./Mesh/
    mesh_file       = iliac_fluid_scaled.mesh
    mesh_type       = .mesh
    verbose         = 0                # verbose during mesh-reading

    vel_order       = P1               # P1, P1Bubble, P2
    #vel_order       = P1Bubble         # P1, P1Bubble, P2
    #vel_order       = P2               # P1, P1Bubble, P2
    press_order     = P1               # P1, P2
    stiff_strain    = false            # true: sigma with grad( u )^T, false: sigma without it
    div_beta_u_v    = false            # 1=on, 0=off
    diagonalize     = 0                # weight, 0=off
    stabilization   = 'ip'             # "none": none, "ip": Interior Penalty, "sd":Stream-line diffusion

    [../miscellaneous]
    Stokes          = false            # Solve a Stokes problem
    SubITMax        = 0                # Maximum number of iterations
    Tolerance       = 1e-6             # Tolerance
    Omega           = 0.001            # Relaxation parameter
    #range           = '0.1 1.5'        # Range coefficient: OmegaMin < Omega < OmegaMax
    fixedOmega      = false            # Use fixed relaxation
    inverseOmega    = true             # Use inverse minimization

    [../ipstab]
    gammaBeta       = 1
    gammaDiv        = 0.2
    gammaPress      = 0.05
    max_iter_reuse  = 100
    reuse           = true

    #[../valuespersection]
    #computeMeanValuesPerSection    = 0
    #nb_z_section                   = 2
    #tol_section                    = 2e-2
    #x_section_frontier             = .0
    #z_section_init                 = -1.0
    #z_section_final                = .0
    #nb_polygon_edges               = 10

    [../solver]                        # Solver Parameters
    solver          = gmres
    scaling         = none
    output          = none # all summary last none
    conv            = rhs
    max_iter        = 500
    reuse           = true
    max_iter_reuse  = 500
    kspace          = 500
    tol             = 1.e-9

    [../prec]
    #prectype                = AztecOO
    prectype                = Ifpack
    displayList             = false

        [./AztecOO]
        precond             = 'dom_decomp'
        prec_calc           = calc
        reorder             = 1
        keep_info           = 1
        overlap             = 1
        subdomain_solve     = ILUT
        ilut_fill           = 4
        drop                = 1.e-5

        [../ifpack]
        overlap             = 2
        prectype            = Amesos # Amesos (does a local LU factorization), ILUT (not ILU)

            [./relaxation]
            type                   = Jacobi
            sweeps                 = 1
            damping_factor         = 1.
            min_diagonal_value     = 0
            zero_starting_solution = true

            [../partitioner]
            type                   = metis
            overlap                = 2
            local_parts            = 1
            root_node              = 0
            use_symmetric_graph    = true

            [../amesos]
            solvertype             = Amesos_Umfpack # Amesos_KLU or Amesos_Umfpack

            [../fact]
            level-of-fill          = 4
            ilut_level-of-fill     = 10
            absolute_threshold     = 0
            relative_threshold     = 1
            relax_value            = 0
            drop_tolerance         = 1.e-10

            [../schwarz]
            combine_mode           = 0             # 0=Add, 1=Zero, 2=Insert, 3=Average, 4=AbsMax
            compute_condest        = true
            reordering_type        = none          #none, metis, rcm
            filter_singletons      = true

            [../]

        [../]

    [../boundary_conditions]
    list = 'Wall'

        [./Wall]
        type       = Essential
        flag       = 1
        mode       = Full
        component  = 3
        function   = 0

        [../]

    [../]

