# -*- getpot -*- GetPot mode activation for emacs
###################################################################################################
#
#                       This file is part of the LifeV Applications
#                                 Copyright (C) 2009 EPFL
#
#      Author(s): Paolo Crosetto <paolo.crosetto@epfl.ch>
#           Date: 2010-05-01
#  License Terms: GNU GPL
#
###################################################################################################
### MODEL: FSI3D - Cylinder #######################################################################
###################################################################################################

[MultiScale]
modelName        = FSI3D_Cylinder_tube40_Monolithic
modelType        = FSI3D
couplingFlags    = '2 3'



[exporter]
multimesh  = false   # actually we export also the displacement
start      = 0
save       = 1
type       = hdf5
nRestart   = 0       # THIS MUST BE REMOVED IN THE MULTISCALE FRAMEWORK

[importer]
type       = hdf5



[problem]
#initSol     = 00004
#initSolPrev = 00004
#initSolSD   = 00003
#Tstart      = 0.002;

method       = monolithic # monolithic, fullMonolithic
                          # exactJaobilan, fixedPoint

precond      = 0 # 0: full matrix passed to IFPACK, 1: block-diagonal passed to IFPACK
DDNprecond   = 1 # precond for DD-newton, 0 = lin fluid, 1 lin structure, 2 = both

reducedFluid = 0    # 0 = exact, 1 = inexact
defOmega     = 0.01 # usually 0.01 for precond = 0 or 1; -1 for precond = 2
defOmegaS    = 0.01 # matters only with  precond = 2
defOmegaF    = 0.01 # matters only with  precond = 2

linesearch   = 0
# NonLinearRichardson: stop_tol  = abstol + reltol*normRes;
abstol       =  0.    # tolerance in nonLinearRichardson
reltol       =  1.e-5 # tolerance in nonLinearRichardson

restart      = 0
maxSubIter   = 20



[fluid]
useShapeDerivatives = false
domainVelImplicit   = false  # tells if the domain vel is to be considered implicitly in the convective term
convectiveTermDer   = false  # tells if the velocity is to be considered implicitly in the convective term
semiImplicit        = true   # tells if we advance in time after the first nonlinear iteration or not

    [./physics]
    #density         = 1.0             # density   [g/cm^3]
    #viscosity       = 0.035           # viscosity [g/cm/s]

    [../time_discretization]
    #timestep        = 0.001          # [s] Defined here only if different from the one in the main file.
    BDF_order       = 1

    [../space_discretization]
    mesh_dir        = ./Mesh/
    #mesh_file       = tube20.mesh      #  1050 Vertex
    #mesh_file       = tube2x4x20.mesh  #  1785 Vertex
    mesh_file       = tube40.mesh      # 9486 Vertex
    #mesh_file       = tube60.mesh      # 25063 Vertex
    #mesh_file       = tube80.mesh      # 71820 Vertex
    mesh_type       = .mesh
    verbose         = 0                # verbose during mesh-reading

    vel_order       = P1               # P1, P1Bubble, P2
    #vel_order       = P1Bubble         # P1, P1Bubble, P2
    #vel_order       = P2               # P1, P1Bubble, P2
    press_order     = P1               # P1, P2
    stiff_strain    = false            # true: sigma with grad( u )^T, false: sigma without it
    div_beta_u_v    = false                # 1=on, 0=off
    diagonalize     = 0                # weight, 0=off
    stabilization   = 'ip'             # "none": none, "ip": Interior Penalty, "sd":Stream-line diffusion

    [../ipstab]
    gammaBeta       = 10
    gammaDiv        = 0.2
    gammaPress      = 0.05
    max_iter_reuse  = 100
    reuse           = true

    #[../valuespersection]
    #computeMeanValuesPerSection    = 0
    #nb_z_section                   = 2
    #tol_section                    = 2e-2
    #x_section_frontier             = .0
    #z_section_init                 = -1.0
    #z_section_final                = .0
    #nb_polygon_edges               = 10

    [../solver]                        # Solver Parameters
    solver          = gmres
    scaling         = none
    output          = all # all none
    conv            = rhs
    max_iter        = 500
    reuse           = true
    max_iter_reuse  = 500
    kspace          = 500
    tol             = 1.e-13

    [../prec]
    #prectype                = AztecOO
    prectype                = Ifpack
    displayList             = false

        [./AztecOO]
        precond             = 'dom_decomp'
        prec_calc           = calc
        reorder             = 1
        keep_info           = 1
        overlap             = 1
        subdomain_solve     = ILUT
        ilut_fill           = 4
        drop                = 1.e-5

        [../ifpack]
        overlap             = 2
        prectype            = Amesos # Amesos (does a local LU factorization), ILUT (not ILU)

            [./relaxation]
            type                   = Jacobi
            sweeps                 = 1
            damping_factor         = 1.
            min_diagonal_value     = 0
            zero_starting_solution = true

            [../partitioner]
            type                   = metis
            overlap                = 2
            local_parts            = 1
            root_node              = 0
            use_symmetric_graph    = true

            [../amesos]
            solvertype             = Amesos_Umfpack # Amesos_KLU or Amesos_Umfpack

            [../fact]
            level-of-fill          = 4
            ilut_level-of-fill     = 10
            absolute_threshold     = 0
            relative_threshold     = 1
            relax_value            = 0
            drop_tolerance         = 1.e-10

            [../schwarz]
            combine_mode           = 0             # 0=Add, 1=Zero, 2=Insert, 3=Average, 4=AbsMax
            compute_condest        = true
            reordering_type        = none          #none, metis, rcm
            filter_singletons      = true

            [../]

        [../]
        
        [../boundary_conditions]
        # DirichletNeumann conditions
        list = 'InFlowEdge OutFlowEdge'
        #list = 'InFlowEdge OutFlowEdge Interface'
        
        # RobinNeumann conditions
        #list = 'InFlowEdge OutFlowEdge Interface_RN1 Interface_RN2'
        
            [./InFlowEdge]
            type            = Essential
            flag            = 20
            mode            = Full
            component       = 3
            function        = 0
        
            [../OutFlowEdge]
            type            = Essential
            flag            = 30
            mode            = Full
            component       = 3
            function        = 0
        
            [../Interface]
            type            = Essential
            flag            = 1
            mode            = Full
            component       = 3
            FSI             = StructureToFluid
        
            [../Interface_RN1]
            type            = Mixte
            flag            = 1
            mode            = Full
            component       = 3
            FSI             = StructureToFluid
        
            [../Interface_RN2]
            type            = Natural
            flag            = 1
            mode            = Full
            component       = 3
            FSI             = SolidLoadToStructure
        
            [../]
    [../]

[interface] # mesh dependent flags for the interface.
DDBlockPrec = 7
#0: monolithic D-N system,
#1: segregated D-N , works only in the semiImplicit case
#2: monolithic  R-N system (equivalent to 0)
#3: segregated R-N (not working well)
#4: segregated R-N (not working well)
#5: AztecOO preconditioner (or direct parallel solver, in the future updates)
#6: Preconditioner J_QN for the Newton system. It works only with fullMonolithic
fluid_flag      =  1   # default: 1
alphaf          =  0.
alphas          =  0.1 # parameters for Robin-Robin DDBlock preconditioner
tolerance       =  0   # how far points are to be considered the same on the interface



[solid]

    [./physics]
    #density   = 1.2    # density
    #young     = 3.0E6
    #poisson   = 0.30

    [../time_discretization]
    #timestep        = 0.001

    [../space_discretization]
    mesh_dir         = ./Mesh/ 
    #mesh_file        = vessel20.mesh  # mesh file
    mesh_file        = vessel40.mesh  # mesh file
    order            = P1

    [../miscellaneous]
    factor     = 12
    verbose    = 1
    depname    = dep

    [../newton]
    maxiter    = 1
    abstol     = 1.e-8
    linesearch = 0

    [../solver]
    solver          = gmres
    scaling         = none
    output          = all # all none
    conv            = rhs
    max_iter        = 500
    reuse           = true
    max_iter_reuse  = 500
    kspace          = 500
    tol             = 1.e-13
    
    [../prec]
    #prectype                = AztecOO 
    prectype                = Ifpack 
    displayList             = false

        [./AztecOO]
        precond             = 'dom_decomp'
        prec_calc           = calc
        reorder             = 1
        keep_info           = 1
        overlap             = 1
        subdomain_solve     = ILUT
        ilut_fill           = 4
        drop                = 1.e-5
        
        [../ifpack]
        overlap             = 2
        prectype            = Amesos # Amesos (does a local LU factorization), ILUT (not ILU)

            [./relaxation]
            type                   = Jacobi
            sweeps                 = 1
            damping_factor         = 1.
            min_diagonal_value     = 0
            zero_starting_solution = true
            
            [../partitioner]
            type                   = metis
            overlap                = 2
            local_parts            = 1
            root_node              = 0
            use_symmetric_graph    = true

            [../amesos]
            solvertype             = Amesos_Umfpack # Amesos_KLU or Amesos_Umfpack
               
            [../fact]
            level-of-fill          = 10
            ilut_level-of-fill     = 4
            absolute_threshold     = 0
            relative_threshold     = 1
            relax_value            = 0
            drop_tolerance         = 1.e-10

            [../schwarz]
            combine_mode           = 0             # 0=Add, 1=Zero, 2=Insert, 3=Average, 4=AbsMax
            compute_condest        = true
            reordering_type        = none          #none, metis, rcm
            filter_singletons      = true

            [../]
            
        [../]
    
    [../boundary_conditions]
    list = 'Base TopEdge BaseEdge' # EJ/FP
    
        [./Top]
        type       = Essential
        flag       = 3
        mode       = Full
        component  = 3
        function   = 0
    
        [../Base]
        type       = Essential
        flag       = 2
        mode       = Full
        component  = 3
        function   = 0
    
        [../TopEdge]
        type       = Essential
        flag       = 20
        mode       = Full
        component  = 3
        function   = 0
    
        [../BaseEdge]
        type       = Essential
        flag       = 30
        mode       = Full
        component  = 3
        function   = 0
    
        [../]

    [../]

[mesh_motion]

    [./solver]                        # Solver Parameters
    solver          = gmres
    scaling         = none
    output          = all # all none
    conv            = rhs
    max_iter        = 500
    reuse           = true
    max_iter_reuse  = 500
    kspace          = 500
    tol             = 1.e-13

    [../prec]
    #prectype                = AztecOO 
    prectype                = Ifpack 
    displayList             = false
        
        [./AztecOO]
        precond             = 'dom_decomp'
        prec_calc           = calc
        reorder             = 1
        keep_info           = 1
        overlap             = 1
        subdomain_solve     = ILUT
        ilut_fill           = 4
        drop                = 1.e-5
        
        [../ifpack]
        overlap             = 4
        prectype            = Amesos # Amesos (does a local LU factorization), ILUT (not ILU)

            [./relaxation]
            type                   = Jacobi
            sweeps                 = 1
            damping_factor         = 1.
            min_diagonal_value     = 0
            zero_starting_solution = true
            
            [../partitioner]
            type                   = metis
            overlap                = 2
            local_parts            = 1
            root_node              = 0
            use_symmetric_graph    = true

            [../amesos]
            solvertype             = Amesos_Umfpack # Amesos_KLU or Amesos_Umfpack
               
            [../fact]
            level-of-fill          = 10
            ilut_level-of-fill     = 4
            absolute_threshold     = 0
            relative_threshold     = 1
            relax_value            = 0
            drop_tolerance         = 1.e-10

            [../schwarz]
            combine_mode           = 0             # 0=Add, 1=Zero, 2=Insert, 3=Average, 4=AbsMax
            compute_condest        = true
            reordering_type        = none          #none, metis, rcm
            filter_singletons      = true

            [../]

        [../]
    
    [../boundary_conditions]
    list = 'Top Base TopEdge BaseEdge Interface' # EJ/FP
    
        [./Top]
        type       = Essential
        flag       = 3
        mode       = Full
        component  = 3
        function   = 0
    
        [../Base]
        type       = Essential
        flag       = 2
        mode       = Full
        component  = 3
        function   = 0
    
        [../TopEdge]
        type       = Essential
        flag       = 20
        mode       = Full
        component  = 3
        function   = 0
    
        [../BaseEdge]
        type       = Essential
        flag       = 30
        mode       = Full
        component  = 3
        function   = 0
    
        [../Interface]
        type       = Essential
        flag       = 1
        mode       = Full
        component  = 3
        FSI        = StructureDispToHarmonicExtension
    
        [../]
    [../]



[eigensolver]
nevec        = 10
block_size   = 1;
max_blocks   = 1000;
max_restarts = 1000;
tol          = 1e-5;
which        = ML
neval        = 5
