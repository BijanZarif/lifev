# -*- mode: m4 -*-
#
#  This file is part of the LifeV library
#
#  Author(s): Christophe Prud'homme <christophe.prudhomme@epfl.ch>
#       Date: 2004-08-29
#
#  Copyright (C) 2004 EPFL, INRIA and Politecnico di Milano
#
#  This library is free software; you can redistribute it and/or
#  modify it under the terms of the GNU Lesser General Public
#  License as published by the Free Software Foundation; either
#  version 2.1 of the License, or (at your option) any later version.
#
#  This library is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#  Lesser General Public License for more details.
#
#  You should have received a copy of the GNU Lesser General Public
#  License along with this library; if not, write to the Free Software
#  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
# \file testsuite.at
# \author Christophe Prud'homme <christophe.prudhomme@epfl.ch>
# \date 2004-08-29
# 
AT_SETUP([test_monolithic])
AT_KEYWORDS([ns fluid solid fsi])
AT_DATA([data],[[# -*- getpot -*- (GetPot mode activation for emacs)
#-------------------------------------------------
#      Data file for Fluid Structure Solver
#-------------------------------------------------

[problem]

method     = monolithic # fixedPoint, steklovPoincare, exactJacobian, monolithic
precond    = 0 #for Steklov-Poincare:
               #     0 = lin fluid, 1 lin structure, 2 = both, 3 = DD-Newton
               #for Monolithic:
               #     0: full matrix passed to IFPACK, 1: block-diagonal passed to IFPACK
DDNprecond = 1 # precond for DD-newton, 0 = lin fluid, 1 lin structure, 2 = both

reducedFluid = 0 # 0 = exact, 1 = inexact
defOmega   = 0.01 # usually 0.01 for precond = 0 or 1; -1 for precond = 2
defOmegaS  = 0.01 # matters only with  precond = 2
defOmegaF  = 0.01 # matters only with  precond = 2
# only for fixed point and exactJacobian:
# if updateEvery == 1, normal fixedPoint algorithm
# if updateEvery  > 1, recompute computational domain every M_updateEvery iterations (transpiration)
# if updateEvery <= 0, recompute computational domain and matrices only at first subiteration (semi-implicit).
#                        Deprecated when using exactJacobian (better to set ifSemiImplicit=1)
updateEvery = 1
linesearch = 0
# NonLinearRichardson: stop_tol  = abstol + reltol*normRes;
abstol     =  1.e-10 # tolerance in nonLinearRichardson
reltol     =  1.e-6 # tolerance in nonLinearRichardson
etamax     = 1.e-10 # relarive tolerance of the nterface problem (solveJac) (GMRES),
                    # if semiImplicit, set   etamax = 1.e-10,
                    # else (e.g.)            etamax = 1.e-3
restart    = 0
maxSubIter = 20

semiImplicit = true # (only valid for method = exactJacobian or monolithic).

[exporter]
multimesh  = false   # actually we export also the displacement
start      = 0
save       = 1

[fluid]
diagonalBlockPrec = false #
useShapeDerivatives = false

[./physics]
density   = 1.0               # density
viscosity = 0.03              # viscosity

[../time_discretization]
initialtime		= 0.
endtime			= 0.01
timestep		= 0.001
BDF_order		= 1

[../space_discretization]
mesh_dir  = ./Mesh/ # the directory where the mesh file is
#mesh_file = 179347_cm_fluid.mesh  # mesh file
mesh_file = tube20.mesh  # mesh file
#mesh_file = tube_curve20.mesh  # mesh file
vel_order       = P1            # P1, P1Bubble, P2
press_order     = P1            # P1, P2



[../miscellaneous]
verbose   = 1
velname   = vel
pressname = press
steady    = 0
factor    = 1

#[../solver]
#solver          = gmres
#scaling         = none
#output          = all # none
#conv            = rhs
#max_iter        = 100
#kspace          = 100
#tol             = 1.e-10    # AztecOO tolerance

# see http://trilinos.sandia.gov/packages/docs/r8.0/packages/ifpack/doc/html/index.html
#[../prec] #see http://trilinos.sandia.gov/packages/docs/r8.0/packages/ifpack/doc/html/ifp_ilu.html
#prectype        = Amesos # Amesos (does a local LU factorization), ILUT (not ILU)
#reuse           = true
#overlap         = 2
#droptol         = 1.e-5
#fill            = 4
#athr            = 1.2500e-04 # ~h^2. for h=0.25: athr~1e-3
#rthr            = 1
#relax_value     = 1

[../ipstab]
gammaBeta  = 0.02
gammaDiv   = 0.2
gammaPress = 0.2
#gammaBeta  = 0.125
#gammaDiv   = 0.125
#gammaPress = 0.03125
reuse = false


[interface] # mesh dependent flags for the interface.
diagonalBlockPrec = false #
fluid_flag      =  1 # default: 1
#solid_flag      =  1 # default: fluid_flag
#structure_flag  =  1 # default: fluid_flag
#harmonic_flag   =  1 # default: fluid_flag
tolerance       =  0 # how far points are to be considered the same on the interface

[solid]

diagonalBlockPrec = false #

[./physics]
density   = 1.2               # density
young     = 3.0E6
poisson   = 0.30

[../time_discretization]
initialtime		= 0.
endtime			= 0.01
timestep		= 0.001

[../space_discretization]
mesh_dir  = ./Mesh/  # the directory where the mesh file is
#mesh_file = 179347_cm_solid.mesh  # mesh file
mesh_file = vessel20.mesh  # mesh file
#mesh_file = vessel_curve20.mesh  # mesh file
order     = P1


[../miscellaneous]
factor    = 12
verbose   = 1
depname   = dep


[../newton]
maxiter = 1
abstol  = 1.e-8
linesearch = 0


[../prec]
reuse           = false
overlap         = 2
droptol         = 1.e-5
fill            = 2

[../solver]
prectype        = Amesos # Amesos (does a local LU factorization), ILUT (not ILU)
output          = all # none
max_iter        = 1000
poly_ord        = 5
kspace          = 30
precond         = dom_decomp
drop            = 1.00e-4
ilut_fill       = 2
tol             = 1.e-10


[mesh_motion]

[./solver]
output          = all # none
max_iter        = 200
poly_ord        = 5
kspace          = 40
precond         = dom_decomp
drop            = 1.00e-4
ilut_fill       = 4
tol             = 1.e-10
keep_info       = 1

[jacobian]

solver   = gmres;
poly_ord = 5;
kspace   = 40;
conv     = rhs;

]])
AT_CHECK([ln -sf ../../data/mesh/inria/tube20.mesh &&
          ln -sf ../../data/mesh/inria/vessel20.mesh &&
          ../../test_monolithic/test_monolithic -c],[0],[ignore],[ignore])
AT_CLEANUP([out_res_solid iter num_iter out_iter_solid res])


