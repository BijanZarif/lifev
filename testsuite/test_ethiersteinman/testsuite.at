# -*- mode: m4 -*-
#
#  This file is part of the LifeV library
#
#  Author(s): Christophe Prud'homme <christophe.prudhomme@epfl.ch>
#       Date: 2004-08-29
#
#  Copyright (C) 2004 EPFL, INRIA and Politecnico di Milano
#
#  This library is free software; you can redistribute it and/or
#  modify it under the terms of the GNU Lesser General Public
#  License as published by the Free Software Foundation; either
#  version 2.1 of the License, or (at your option) any later version.
#
#  This library is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#  Lesser General Public License for more details.
#
#  You should have received a copy of the GNU Lesser General Public
#  License along with this library; if not, write to the Free Software
#  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
# \file testsuite.at
# \author Christophe Prud'homme <christophe.prudhomme@epfl.ch>
# \date 2004-08-29
#
AT_SETUP([test_ethiersteinman])
AT_KEYWORDS([ns fluid])
AT_DATA([data],[[# -*- getpot -*- (GetPot mode activation for emacs)
#-------------------------------------------------
#      Data file for EthierSteinman test case
#-------------------------------------------------


[exporter]
type       = hdf5 # hdf5 (if library compiled with hdf5 support) or ensight
multimesh  = false
start      = 0
save       = 1

[fluid]

    [./physics]
    density         = 1.0          # density
    viscosity       = .01       # viscosity

    [../time_discretization]
    initialtime		= 0.
    endtime			= 0.04
    timestep		= 0.01
    BDF_order		= 1

    [../space_discretization]
    mesh_dir        = ./   # the directory where the mesh file is
    #mesh_file       = cube4x4.mesh          # mesh file
    mesh_file       = cube8x8.mesh          # mesh file

    verbose         = 0
    linearized      = 0
    diagonalize     = 1 # weight, 0=off
    div_beta_u_v    = 0 # 1=on, 0=off
    vel_order         = P1
    press_order       = P1

    initialization  = interp            # initialize using proj: L2 projection
                                        #                  interp: interpolation

    [../miscellaneous]
    verbose         = 1
    steady          = 0

	[../prec]
	prectype                = Ifpack # Ifpack or ML
	displayList             = true

		[./ML]
		analyze_smoother        = false
		default_parameter_list 	= DD-ML    # for ML precond, SA, DD, DD-ML, maxwell, NSSA, DD-ML-LU, DD-LU

			[./smoother]
			# smoother type
			# Aztec, IFPACK, Jacobi, ML symmetric Gauss-Seidel, symmetric Gauss-Seidel,
			# ML Gauss-Seidel, Gauss-Seidel, Chebyshev, MLS, Hiptmair, Amesos-KLU,
			# Amesos-Superlu, Amesos-UMFPACK, Amesos-Superludist, Amesos-MUMPS,
			# user-defined, SuperLU, IFPACK-Chebyshev, self, do-nothing,
			# IC, ICT, ILU, ILUT
			type                    = IFPACK
			pre_or_post             = pre
			sweeps                  = 3
			damping_factor          = 1

			[../coarse]
			type                    = Amesos-UMFPACK
			#type                    = Amesos-KLU
			sweeps                  = 1
			pre_or_post             = both
			max_size                = 200

			[../repartition]
			enable                  = 1
			partitioner             = ParMETIS
			max_min_ration          = 1.3
			min_per_proc            = 500

			[../energy_minimization]
			enable			= true
			type			= 3
			[../]

        # ifpack
        [../ifpack]
        overlap		= 2

           	[./fact]
           	ilut_level-of-fill            = 1
           	drop_tolerance                = 1.e-5
           	relax_value                   = 0

           	[../amesos]
           	solvertype =  Amesos_Umfpack # Amesos_KLU or Amesos_Umfpack

           	[../partitioner]
           	overlap = 2

           	[../schwarz]
           	reordering_type = none #metis, rcm, none
           	filter_singletons = true

			[../]
		[../]

    [../solver]
    solver          = gmres
    scaling         = none
    output          = all # none
    conv            = rhs
    max_iter        = 100
    reuse           = true
    max_iter_reuse  = 80
    kspace          = 100
    tol             = 1.e-10    # AztecOO tolerance

    [../ipstab]
    gammaBeta  = 0.02
    gammaDiv   = 0.2
    gammaPress = 0.2
    max_iter_reuse  = 60

    [../problem]
    #a = 1.57
    #d = 0.78
    sigma = 0
    #neumannList =
    dirichletList = 1,2,3,4,5,6


]])
AT_CHECK([ln -sf ../../data/mesh/inria/cube8x8.mesh &&
          mpirun -np 2 ../../test_ethiersteinman/test_ethiersteinman -c],[0],[ignore],[ignore])
AT_CLEANUP([out_res_solid iter num_iter out_iter_solid res])

