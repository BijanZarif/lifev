# -*- mode: m4 -*-
#
#  This file is part of the LifeV library
#
#  Author(s): Christophe Prud'homme <christophe.prudhomme@epfl.ch>
#       Date: 2004-08-29
#
#  Copyright (C) 2004 EPFL, INRIA and Politecnico di Milano
#
#  This library is free software; you can redistribute it and/or
#  modify it under the terms of the GNU Lesser General Public
#  License as published by the Free Software Foundation; either
#  version 2.1 of the License, or (at your option) any later version.
#
#  This library is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#  Lesser General Public License for more details.
#
#  You should have received a copy of the GNU Lesser General Public
#  License along with this library; if not, write to the Free Software
#  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
# \file testsuite.at
# \author Christophe Prud'homme <christophe.prudhomme@epfl.ch>
# \date 2004-08-29
#
AT_SETUP([test_ethiersteinman])
AT_KEYWORDS([ns fluid])
AT_DATA([data],[[# -*- getpot -*- (GetPot mode activation for emacs)
#-------------------------------------------------
#      Data file for EthierSteinman test case
#-------------------------------------------------


[exporter]
type       = hdf5 # hdf5 (if library compiled with hdf5 support) or ensight
multimesh  = false
start      = 0
save       = 1

[fluid]

[./physics]
density         = 1.0          # density
viscosity       = .01       # viscosity

[../time_discretization]
initialtime		= 0.
endtime			= 0.04
timestep		= 0.01
BDF_order		= 1

[../space_discretization]
mesh_dir        = ./   # the directory where the mesh file is
mesh_file       = cube4x4.mesh          # mesh file

verbose         = 0
linearized      = 0
diagonalize     = 1 # weight, 0=off
div_beta_u_v    = 0 # 1=on, 0=off
vel_order         = P1
press_order       = P1

initialization  = interp                # initialize using proj: L2 projection
                                        #                  interp: interpolation

[../miscellaneous]
verbose         = 1
steady          = 0

[../solver]
solver          = gmres
scaling         = none
output          = all_res # all_res
conv            = r0
max_iter        = 100
kspace          = 100
tol             = 1.00e-10


[../prec] #see http://trilinos.sandia.gov/packages/docs/r8.0/packages/ifpack/doc/html/ifp_ilu.html
prectype        = Ifpack   # Amesos (does a local LU factorization), ILUT (not ILU)
reuse           = true
overlap         = 2
droptol         = 1.e-10 # ??
fill            = 4
athr            = 1e-3 # ~h^2. for h=0.25: athr~1e-3
rthr            = 1
relax_value     = 1


[../ipstab]
gammaBeta  = 0.02
gammaDiv   = 0.2
gammaPress = 0.2

[../problem]
a = 1.57
d = 0.78
sigma = 0
#neumannList =
dirichletList = 1,2,3,4,5,6


]])
AT_CHECK([ln -sf ../../data/mesh/inria/cube4x4.mesh &&
          mpirun -np 2 ../../test_ethiersteinman/test_ethiersteinman -c],[0],[ignore],[ignore])
AT_CLEANUP([out_res_solid iter num_iter out_iter_solid res])

