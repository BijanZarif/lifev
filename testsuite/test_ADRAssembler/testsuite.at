###################################################################################################
#
#                       This file is part of the LifeV Applications                        
#                Copyright (C) 2001-2010 EPFL, Politecnico di Milano, INRIA      
#
#      Author(s): Christophe Prud'homme <christophe.prudhomme@epfl.ch>
#                 Gwenol Grandperrin <gwenol.grandperrin@epfl.ch>
#           Date: 17-05-2010
#  License Terms: GNU GPL
#
###################################################################################################
### TEST: ADRAssembler ############################################################################
###################################################################################################



AT_SETUP([test_ADRAssembler])
AT_KEYWORDS([Advection Diffusion Reaction Assembler])
AT_DATA([data],[[

# -*- getpot -*- (GetPot mode activation for emacs)
#-------------------------------------------------
#      Data file for ADRAssembler test case
#-------------------------------------------------

[mesh]

nelements = 19

[../exporter]

type       = hdf5 # hdf5 (if library compiled with hdf5 support) or ensight
multimesh  = false
start      = 0
save       = 1

[../prec]
	prectype                = Ifpack # Ifpack or ML
	displayList             = false

        [../ifpack]
	        overlap		= 2

           	[./fact]
           	ilut_level-of-fill            = 1
           	drop_tolerance                = 1.e-5
           	relax_value                   = 0

           	[../amesos]
           	solvertype =  Amesos_Umfpack # Amesos_KLU or Amesos_Umfpack

           	[../partitioner]
           	overlap = 2

           	[../schwarz]
           	reordering_type = none #metis, rcm, none
           	filter_singletons = true

		[../]
	[../]

[../solver]
    solver          = gmres
    scaling         = none
    output          = all # none
    conv            = rhs
    max_iter        = 200
    reuse           = true
    max_iter_reuse  = 80
    kspace          = 100
    tol             = 1.e-10    # AztecOO tolerance



]])
AT_CHECK([ mpirun -np 3 ../../test_ADRAssembler/test_ADRAssembler -c],[0],[ignore],[ignore])
AT_CLEANUP([out_res_solid iter num_iter out_iter_solid res])

