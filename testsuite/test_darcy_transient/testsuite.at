# -*- mode: m4 -*-
#
#  This file is part of the LifeV library
#
#  Author(s): Christophe Prud'homme <christophe.prudhomme@epfl.ch>
#       Date: 2004-08-29
#
#  Copyright (C) 2004 EPFL, INRIA and Politecnico di Milano
#
#  This library is free software; you can redistribute it and/or
#  modify it under the terms of the GNU Lesser General Public
#  License as published by the Free Software Foundation; either
#  version 2.1 of the License, or (at your option) any later version.
#
#  This library is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#  Lesser General Public License for more details.
#
#  You should have received a copy of the GNU Lesser General Public
#  License along with this library; if not, write to the Free Software
#  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
# \file testsuite.at
# \author Vincent Martin <vincent.martin@mate.polimi.it>
# \date 2004-10-10
# 
AT_SETUP([test_darcy])
AT_KEYWORDS([])
AT_DATA([data],[[


# -*- getpot -*- (GetPot mode activation for emacs)
#-------------------------------------------------
#          Data file for a Darcy problem
#-------------------------------------------------

[darcy]

	[./physics]
	[../]

	[./space_discretization]
	mesh_dir      = ./ #../../../lifev-head/testsuite/data/mesh/cartesian_cube/  # the directory where the mesh file is
	mesh_file     = cartesian_cube8.mesh #hexahexa10x10x10.mesh
	mesh_type     = .mesh #structured #.mesh
	verbose       = 1                        # verbose during mesh-reading
	# 0 -> tetra, 1 -> hexa
	element_shape = 0             
	[../]
	
	[./miscellaneous]
	post_dir         = ./             # the directory for postprocessing files
	test_case        = 1                             # in particular for b.c. condition
	verbose          = false
	post_proc_format = medit          # vtk or medit
	[../]
	
	[./prec]
	# ML, Ifpack
	prectype                = ML 
	reuse                   = false	 
	displayList             = false

		[./ML]
		analyze_smoother        = false
		default_parameter_list 	= SA    # for ML precond, none SA, DD, DD-ML, maxwell, NSSA, DD-ML-LU, DD-LU
        max_levels              = 2

			[./smoother]
			# smoother type
			# Aztec, IFPACK, Jacobi, ML symmetric Gauss-Seidel, symmetric Gauss-Seidel,
			# ML Gauss-Seidel, Gauss-Seidel, Chebyshev, MLS, Hiptmair, Amesos-KLU,
			# Amesos-Superlu, Amesos-UMFPACK, Amesos-Superludist, Amesos-MUMPS,
			# user-defined, SuperLU, IFPACK-Chebyshev, self, do-nothing,
			# IC, ICT, ILU, ILUT
			type                    = IFPACK
			pre_or_post             = both
			sweeps                  = 3
			damping_factor          = 1
			[../]
			
			[./coarse]
			type                    = Amesos-UMFPACK
			sweeps                  = 1
			pre_or_post             = both
			max_size                = 1024
			[../]

			[./repartition]
			enable                  = 1
			partitioner             = ParMETIS
			max_min_ration          = 1.3
			min_per_proc            = 500
			[../]

			[./energy_minimization]
			enable			= true
			type			= 3
			[../]
		[../]

# ifpack
		[./ifpack]
		prectype               = Amesos    # Amesos (does a local LU factorization), ILUT (not ILU)
		overlap                = 3

			[./relaxation]
			type                   = Jacobi
			damping_factor         = 1.
			sweeps                 = 1
			min_diagonal_value     = 0
			zero_starting_solution = true
			[../]
			
			[./partitioner]
			# linear, greedy, metis
			type                   = metis
			overlap                = 0
			local_parts            = 1
			root_node              = 0
			use_symmetric_graph    = true
			[../]
	
			[./amesos]
			# Amesos_Lapack, Amesos_Klu (default), Amesos_Umfpack, 
			# Amesos_Superlu, Amesos_Mumps, Amesos_Dscpack
			solvertype             = Amesos_Umfpack
			[../]

			[./fact]
			drop_tolerance         = 1.e-10
			level-of-fill          = 1
			ilut_level-of-fill     = 1
			absolute_threshold     = 0.
			relative_threshold     = 0.
			relax_value            = 0.
			[../]

			[./schwarz]
			combine_mode           = 0
			compute_condest        = false
			reordering_type        = none
			filter_singletons      = true
			[../]
       [../]
   [../]
   
   [./solver]
   solver          = gmres #gmres cg
   scaling         = none
   output          = all # none
   conv            = rhs
   max_iter        = 100
   reuse           = false
   max_iter_reuse  = 0
   kspace          = 100
   tol             = 1.e-12    # AztecOO tolerance

   [./amesos]
   solvertype	= Umfpack
   redistribute	= true
   print_status = true
   print_timing	= true

	[../aztec]
	solver = cg  #cg , gmres, cgs, tfqmr, bicgstab, slu, symmlq, fixed_pt, lu
	precond = dom_decomp
	subdomain_solve = icc
	output = warnings    #warnings , none , all, all, last
	tol = 1e-6


]])
AT_CHECK([ln -sf ../../../data/mesh/inria/cartesian_cube8.mesh && mpirun -np 2 ../../test_darcy/test_darcy -c],[0],[ignore],[ignore])
AT_CLEANUP


