# -*- mode: m4 -*-
#
#  This file is part of the LifeV library
#
#  Author(s): Christophe Prud'homme <christophe.prudhomme@epfl.ch>
#       Date: 2004-08-29
#
#  Copyright (C) 2004 EPFL, INRIA and Politechnico di Milano
#
#  This library is free software; you can redistribute it and/or
#  modify it under the terms of the GNU Lesser General Public
#  License as published by the Free Software Foundation; either
#  version 2.1 of the License, or (at your option) any later version.
#
#  This library is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#  Lesser General Public License for more details.
#
#  You should have received a copy of the GNU Lesser General Public
#  License along with this library; if not, write to the Free Software
#  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
# \file testsuite.at
# \author Vincent Martin <vincent.martin@mate.polimi.it>
# \date 2004-10-10
# 
AT_SETUP([test_darcy (hexa)])
AT_KEYWORDS([test_darcy darcy])
AT_DATA([data],[[# -*- getpot -*- (GetPot mode activation for emacs)
#-------------------------------------------------
#          Data file for a Darcy problem
#-------------------------------------------------

[darcy]

[./physics]
test_case       = 1                 # in particular for b.c. condition
diffusion_type  = 0                 # 0: scalar diffusion, 1: tensor diffusion
diffusion_function = 0  # select a user function
diffusion_scalar  = 1.  # scalar diffusion coefficient
diffusion_tensor  = '1. 0. 0.  0. 1. 0  0. 0. 1.' # diffusion tensor

[../linearsolver]
theLinearSolver   = 0    # 0: Aztec, 1: UMFPack (UMFPack not implemented yet)

[../discretization]
mesh_dir    = ./        # the directory where the mesh file is
mesh_file   = cylhexa.mesh      #
mesh_type   = .mesh
mesh_faces   = all      # OBLIGATORY! we need all faces!
element_shape = 1       # 0: tetra; 1: hexa

[../miscellaneous]
post_dir = ./                 # the directory for postprocessing files
verbose = 1
post_proc_format = medit          # vtk or medit

[../aztec]
solver = cg  #cg , gmres, cgs, tfqmr, bicgstab, slu, symmlq, fixed_pt, lu
precond = dom_decomp
subdomain_solve = icc
output = warnings    #warnings , none , all, all_res, last
tol = 1e-6
]])
AT_CHECK([ln -sf $top_builddir/testsuite/data/mesh/inria/cylhexa.mesh &&  $top_builddir/testsuite/test_darcy/test_darcy],[0],[ignore],[ignore])
AT_CLEANUP


AT_SETUP([test_darcy (tetra)])
AT_KEYWORDS([test_darcy darcy])
AT_DATA([datatetra],[[# -*- getpot -*- (GetPot mode activation for emacs)
#-------------------------------------------------
#          Data file for a Darcy problem
#-------------------------------------------------

[darcy]

[./physics]
test_case       = 1                 # in particular for b.c. condition
diffusion_type  = 0                 # 0: scalar diffusion, 1: tensor diffusion
diffusion_function = 0  # select a user function
diffusion_scalar  = 1.  # scalar diffusion coefficient
diffusion_tensor  = '1. 0. 0.  0. 1. 0  0. 0. 1.' # diffusion tensor

[../linearsolver]
theLinearSolver   = 0    # 0: Aztec, 1: UMFPack (UMFPack not implemented yet)

[../discretization]
mesh_dir    = ./        # the directory where the mesh file is
mesh_file   = cyltetra.mesh      #
mesh_type   = .mesh
mesh_faces   = all      # OBLIGATORY! we need all faces!
element_shape = 0       # 0: tetra; 1: hexa

[../miscellaneous]
post_dir = ./                 # the directory for postprocessing files
verbose = 1
post_proc_format = medit          # vtk or medit

[../aztec]
solver = cg  #cg , gmres, cgs, tfqmr, bicgstab, slu, symmlq, fixed_pt, lu
precond = dom_decomp
subdomain_solve = icc
output = warnings    #warnings , none , all, all_res, last
tol = 1e-6
]])
AT_CHECK([ln -sf $top_builddir/testsuite/data/mesh/inria/cyltetra.mesh &&  $top_builddir/testsuite/test_darcy/test_darcy -f datatetra],[0],[ignore],[ignore])
AT_CLEANUP
