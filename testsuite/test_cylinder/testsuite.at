# -*- mode: m4 -*-
#
#  This file is part of the LifeV library
#
#  Author(s): Christophe Prud'homme <christophe.prudhomme@epfl.ch>
#       Date: 2004-08-29
#
#  Copyright (C) 2004 EPFL, INRIA and Politecnico di Milano
#
#  This library is free software; you can redistribute it and/or
#  modify it under the terms of the GNU Lesser General Public
#  License as published by the Free Software Foundation; either
#  version 2.1 of the License, or (at your option) any later version.
#
#  This library is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#  Lesser General Public License for more details.
#
#  You should have received a copy of the GNU Lesser General Public
#  License along with this library; if not, write to the Free Software
#  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
# \file testsuite.at
# \author Christophe Prud'homme <christophe.prudhomme@epfl.ch>
# \date 2004-08-29
#
AT_SETUP([test_cylinder])
AT_KEYWORDS([test_cylinder fluid])
AT_DATA([data],[[# -*- getpot -*- (GetPot mode activation for emacs)
#----------------------------------------------------------------
#      Data file for cylinder test with Navier-Stokes IP Solver
#----------------------------------------------------------------

[exporter]
start           = 0             # start index for filenames
save            = 1             # how many time steps per posptrocessing
multimesh       = false         # true if the mesh has to be saved at each post-processing step



[fluid]
useShapeDerivatives = false

	[./physics]
	density         = 1.0           # density   [kg/m^3]
	viscosity       = 0.03			# viscosity [kg/m/s]

	[../miscellaneous]
	verbose         = 0
	
	[../time]
	initialtime		= 0.
	endtime			= 0.001
	timestep		= 0.0001
	BDF_order		= 1

	[../discretization]
	mesh_dir        = ./
	mesh_file       = tube20.mesh
	mesh_type       = .mesh
	mesh_faces      = all           # update all faces elements
	mesh_edges      = all           # update all faces elements
	verbose         = 0             # verbose during mesh-reading

	vel_order       = P1Bubble	     	# P1, P1Bubble, P2
	press_order     = P1		    # P1, P2
	div_beta_u_v    = 1             # 1=on, 0=off
	diagonalize     = 0             # weight, 0=off

	[../ipstab]
	gammaBeta       = 0.125
	gammaDiv        = 0.125
	gammaPress      = 0.03125
	reuse           = true

	[../solver]                     # Solver Parameters
	solver          = gmres
	scaling         = none
	output          = all_res # all_res
	conv            = rhs
	max_iter        = 100
	kspace          = 100

	[../prec]                       # Preconditioner Parameters
	prectype        = Ifpack # Amesos (does a local LU factorization), ILUT (not ILU)
	reuse           = true
	overlap         = 2
	#droptol         = 1.e-5 ??
	fill            = 4
	relax_value     = 1



	[../boundary_conditions]
	list = 'Inlet Outlet Wall Ring' # use apex to create the list; use spaces to separe members
	#list = 'InletXY InletZ Outlet Wall Ring' # use apex to create the list; use spaces to separe members

		[./Inlet]
		type       = Essential
		flag       = 2
		mode       = Full
		component  = 3
		function   = '(0., 0., 3*0.03*(1/4-(x^2+y^2)))' # Poiseuille - viscosity = 0.03

		[../InletXY]
		type       = Essential
		flag       = 2
		mode       = Component
		component  = '1 2' # use apex to create the list; use spaces to separe members
		function   = '(0., 0., 0.)'

		[../InletZ]
		type       = Essential
		flag       = 2
		mode       = Component
		component  = 3
		function   = '(0., 0., 3*0.03*(1/4-(x^2+y^2)))' # Poiseuille - viscosity = 0.03

		[../Outlet]
		type       = Natural
		flag       = 3
		mode       = Full
		component  = 3
		function   = '(0., 0., 0.)'

		[../Wall]
		type       = Essential
		flag       = 1
		mode       = Full
		component  = 3
		function   = '(0., 0., 0.)'

		[../Ring]
		type       = Essential
		flag       = 20
		mode       = Full
		component  = 3
		function   = '(0., 0., 0.)'

]])


AT_CHECK([ln -sf ../../data/mesh/inria/tube20.mesh;
          mpirun -np 2 ../../test_cylinder/test_cylinder -c],[0],[ignore],[ignore])
AT_CLEANUP([out_res_solid iter num_iter out_iter_solid res])

