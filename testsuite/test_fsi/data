# -*- getpot -*- (GetPot mode activation for emacs)
#-------------------------------------------------
#      Data file for Fluid Structure Solver
#-------------------------------------------------

[problem]

method     = exactJacobian # fixedPoint, steklovPoincare, exactJacobian
algorithm  = DirichletNeumann # DirichletNeumann, RobinNeumann, for fixedPoint method
precond    = 1 # 0 = lin fluid, 1 lin structure, 2 = both, 3 = DD-Newton
DDNprecond = 1 # precond for DD-newton, 0 = lin fluid, 1 lin structure, 2 = both
reducedFluid = 0 # 0 = exact, 1 = inexact
defOmega   = 0.01 # usually 0.01 for precond = 0 or 1; -1 for precond = 2
defOmegaS  = 0.01 # matters only with  precond = 2
defOmegaF  = 0.01 # matters only with  precond = 2
# only for fixed point and exactJacobian:
# if updateEvery == 1, normal fixedPoint algorithm
# if updateEvery  > 1, recompute computational domain every M_updateEvery iterations (transpiration)
# if updateEvery <= 0, recompute computational domain and matrices only at first subiteration (semi-implicit).
#                        Deprecated when using exactJacobian (better to set ifSemiImplicit=1)
updateEvery = -1
linesearch = 0
# NonLinearRichardson: stop_tol  = abstol + reltol*normRes;
abstol     = 0.e-5
reltol     = 1.e-5
etamax     = 1.e-5 # tolerance of the interface problem (GMRES),
                    # if semiImplicit, set   etamax = 1.e-10,
                    # else (e.g.)            etamax = 1.e-3
semiImplicit = false # (only valid for method = exactJacobian or monolithic).
maxSubIter = 100
#monolithic = 0


restart    = false   # restart the computations (see also importer)
#restart    = true
#Tstart     = 0.005 # restart from time Tstart

[interface] # mesh dependent flags for the interface.
fluid_flag      =  1 # default: 1
#solid_flag      =  1 # default: fluid_flag
#structure_flag  =  1 # default: fluid_flag
#harmonic_flag   =  1 # default: fluid_flag
tolerance       =  0 # how far points are to be considered the same on the interface

[exporter]
multimesh  =    false   # actually we export also the displacement
start      = 0
#start      = 4
save       = 1

[fluid]

useShapeDerivatives = true
absorbing_bc		= true

[./physics]
density   = 1.0               # density
viscosity = 0.03              # viscosity

[../time_discretization]
initialtime		= 0.
endtime			= 0.79
timestep		= 0.0001
BDF_order		= 1

# end of fluid preconditioner parameters
[../ipstab]
gammaBeta  = 0.02
gammaDiv   = 0.2
gammaPress = 0.2
reuse      = true

[../space_discretization]
mesh_dir  = ./Mesh/ # the directory where the mesh file is
#mesh_file = stent-fluid-coarse.mesh  # mesh file
mesh_file = tube20.mesh  # mesh file
#mesh_file = tube.mesh  # mesh file

vel_order		= P1Bubble		# P1, P1Bubble, P2
press_order		= P1			# P1, P2

[../miscellaneous]
verbose   = 1
velname   = vel
pressname = press
steady    = 0
factor    = 1

[../solver]
solver          = gmres
scaling         = none
output          = all  #none
conv            = rhs
max_iter        = 100
max_iter_reuse  = 100
kspace          = 100
tol             = 1.e-10    # AztecOO tolerance

[../prec]
prectype        = Ifpack
reuse           = true
displayList     = true

[./ifpack]
prectype               = Amesos    # Amesos (does a local LU factorization), ILUT (not ILU)
overlap         = 2

[./relaxation]
type                   = Jacobi
damping_factor         = 1.
sweeps                 = 1
min_diagonal_value     = 0
zero_starting_solution = true

[../partitioner]
type                   = metis
#overlap                = 0
local_parts            = 1
root_node              = 0
use_symmetric_graph    = true

[../amesos]
solvertype             = Amesos_KLU

[../fact]
drop_tolerance         = 1.e-5
level-of-fill          = 1
ilut_level-of-fill     = 1
absolute_threshold     = 0.
relative_threshold     = 0.
relax_value            = 0.

[../schwarz]
combine_mode           = true
reordering_type        = none
filter_singletons      = false
# end of fluid preconditioner parameters

[lin_fluid]

[./solver]
solver          = gmres
scaling         = none
output          = all  #none
conv            = rhs
max_iter        = 100
kspace          = 100
tol             = 1.e-5    # AztecOO tolerance

[../prec] #see http://trilinos.sandia.gov/packages/docs/r8.0/packages/ifpack/doc/html/ifp_ilu.html
prectype        = Ifpack
reuse           = true
displayList     = false

[./ifpack]
prectype               = Amesos    # Amesos (does a local LU factorization), ILUT (not ILU)
overlap         = 2

[./relaxation]
type                   = "Jacobi"
damping_factor         = 1.
sweeps                 = 1
min_diagonal_value     = 0
zero_starting_solution = true

[../partitioner]
type                   = metis
#overlap                = 0
local_parts            = 1
root_node              = 0
use_symmetric_graph    = true

[../amesos]
solvertype             = Amesos_KLU

[../fact]
drop_tolerance         = 1.e-5
level-of-fill          = 1
ilut_level-of-fill     = 1
absolute_threshold     = 0.
relative_threshold     = 0.
relax_value            = 0.

[../schwarz]
combine_mode           = true
reordering_type        = none
filter_singletons      = false
# end of fluid preconditioner parameters

[solid]

[./physics]
material_flag   = 1 #,2
young           = 3.0E6 #,1.9E9
poisson         = 0.30 #,0.30

density         = 1.2					# density
thickness		= 0.1

[../time_discretization]
timestep		= 0.0001

[../space_discretization]
mesh_dir  = ./Mesh/  # the directory where the mesh file is
#mesh_file = stent-solid-coarse.mesh  # mesh file
mesh_file = vessel20.mesh  # mesh file
#mesh_file = vessel.mesh  # mesh file
order     = P1

[../miscellaneous]
factor    = 12
verbose   = 1
depname   = dep


[../newton]
maxiter = 1
abstol  = 1.e-8
linesearch = 0

[../solver]
output          = all
max_iter        = 100
poly_ord        = 5
kspace          = 100
precond         = dom_decomp
drop            = 1.00e-4
ilut_fill       = 2
tol             = 1.e-10


[../prec]
prectype        = Ifpack
reuse           = true
overlap         = 2

[./ifpack]

[./fact]
droptol         = 1.e-5
fill            = 2

[../amesos]
solvertype      = Amesos_Umfpack


[mesh_motion]

[./solver]
output          = all
max_iter        = 300
poly_ord        = 5
kspace          = 40
precond         = dom_decomp
drop            = 1.00e-4
ilut_fill       = 4
tol             = 1.e-10
keep_info       = 1

# see http://trilinos.sandia.gov/packages/docs/r8.0/packages/ifpack/doc/html/index.html
[../prec] #see http://trilinos.sandia.gov/packages/docs/r8.0/packages/ifpack/doc/html/ifp_ilu.html
prectype        = Ifpack
reuse           = true

[./ifpack]
prectype        = Amesos    # Amesos (does a local LU factorization), ILUT (not ILU)
droptol         = 1.e-5
fill            = 4
relax_value     = 1
overlap         = 1

[./amesos]
solvertype      = Amesos_Umfpack

[jacobian]

solver   = gmres;
poly_ord = 5;
kspace   = 40;
conv     = rhs;
